name: Build and deploy
on:
  push:
    branches: [ main ]

permissions:
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Login to local docker registry
        uses: docker/login-action@v2
        with:
          registry: http://localhost:5000
          username: docker
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build Website Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: website
          file: website/Dockerfile
          push: true
          tags: |
            localhost:5000/satisfactory-website:latest
            localhost:5000/satisfactory-website:${{ github.sha }}
      - name: Build Save Game Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: save-games
          file: save-games/Dockerfile
          push: true
          tags: |
            localhost:5000/satisfactory-save-games:latest
            localhost:5000/satisfactory-save-games:${{ github.sha }}

  deploy:
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Login to local docker registry
        uses: docker/login-action@v2
        with:
          registry: http://localhost:5000
          username: docker
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Update docker compose and restart
        run: |
          cp docker-compose.yml /opt/satisfactory/docker-compose.yml
          
          cd /opt/satisfactory
          docker compose pull && docker compose up -d
